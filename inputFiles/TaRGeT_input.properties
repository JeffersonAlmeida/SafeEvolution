# Description of SPL Refactoring
# example: PDF Report Feature
evolutionDescription = Test


# This the <SOURCE> Software Product Line File System directory.
# <SOURCE> Stands For: The SPL before refactoring.
# example: /home/user/workspace/myApp/
sourceLineDirectory = /home/jefferson/workspace/pairs/TaRGeT 6.0/


# This the <TARGET> Software Product Line File System directory.
# <TARGET> Stands For: The SPL after refactoring.
# example: /home/user/workspace/myAppRefactored/
targetLineDirectory = /home/jefferson/workspace/pairs/TaRGeT6.0Testes/


# This the <SOURCE> Software Product Line LIBRARY File System directory.
# example: /home/user/workspace/myApp/lib/
sourceLineLibDirectory = /home/jefferson/workspace/pairs/TaRGeT 6.0/lib/


# This the <TARGET> Software Product Line LIBRARY File System directory.
# example: /home/user/workspace/myAppRefactored/lib/
targetLineLibDirectory = /home/jefferson/workspace/pairs/TaRGeT6.0Testes/lib/

# Which Software Product Line would you like to check its refinement ?
# Options:  <TaRGeT, MobileMedia, Default>
#
# <TaRGeT> automates a systematic approach for dealing with requirements and test artifacts in an integrated way,
# in which test cases can be automatically generated from use cases scenarios written in natural language.
line = TaRGeT


# http://randoop.googlecode.com/hg/doc/index.html
#
# --timeout=int. After this many milliseconds, a non-returning method call, and its associated test,
# are stopped forcefully. Only meaningful if --usethreads is also specified.
timeout = 60

# http://randoop.googlecode.com/hg/doc/index.html
# Amount of junit tests per product.
# --inputlimit=int. Maximum number of tests generated.
# Used to determine when to stop test generation. Generation stops when either the time limit (--timelimit=int) OR
# the input limit (--inputlimit=int) is reached. The number of tests output may be smaller than then number of inputs created,
inputlimit = 2


# Options: { <APP>, <AP>, <IP>, <IC>, <EIC> }
approach = IC


# Options: { <True>, <False> }
aspectsInSourceSPL = True


# Options: { <True>, <False> }
aspectsInTargetSPL = True


# Options: { <commonMethods>, <allMethods> }
whichMethods = commonMethods


# Options: {  <simple> , <hephaestus> }
ckFormatSourceSPL =  simple


# Options: {  <simple> , <hephaestus> }
ckFormatTargetSPL = simple


# Options: {  <simple> , <hephaestus> }
amFormatSourceSPL = simple


# Options: {  <simple> , <hephaestus> }
amFormatTargetSPL = simple


# File System Directory of CK AM and FM <SOURCE> SPL
# example = /home/user/workspace/myApp/ckFmAmDirectory/
# It's mandatory that file have the respectively names: ck.xml, fm.xml and am.txt
artifactsSourceDir = /home/jefferson/workspace/pairs/TaRGeT 6.0/


# File System Directory of CK AM and FM  <TARGET> SPL
# example = /home/user/workspace/myApp/ckFmAmDirectory/
# It's mandatory that file have the respectively names: ck.xml, fm.xml and am.txt
artifactsTargetDir = /home/jefferson/workspace/pairs/TaRGeT6.0Testes/



