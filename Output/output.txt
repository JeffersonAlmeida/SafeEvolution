
The directory of the generated products: <  Tool Path + Products  >


clean_products_folder:
     [echo] This is an Ant Task created to clean the generated products folder.

 Two directories have been deleted:  < Tool Path + Products > and < pluginpath + emma + instr >
Walk through this directory and get all files: /home/jefferson/Desktop/workspace/Bank1.0//src
Walk through this directory and get all files: /home/jefferson/Desktop/workspace/Bank1.1//src



		Let's put the products in cache.


Build the SOURCE Feature Model Alloy file:
source Set OF Features: 

SOURCE Features: 

Feature: core

Feature: bank

SOURCE FM Semantics: pred semanticasource[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }

 Alloy File has been created. Check it out in < Tool Path + Alloy + Alloy File >


Build the TARGET Feature Model Alloy file:
target Set OF Features: 

TARGET Features: 

Feature: core

Feature: bank

TARGET FM Semantics: pred semanticatarget[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }

 Alloy File has been created. Check it out in < Tool Path + Alloy + Alloy File >


Build the EVOLUTION Alloy file:

 Alloy File has been created. Check it out in < Tool Path + Alloy + Alloy File >


		The products are already in cache.

Build the SOURCE Feature Model Alloy file:
source Set OF Features: 

SOURCE Features: 

Feature: core

Feature: bank

SOURCE FM Semantics: pred semanticasource[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }

 Alloy File has been created. Check it out in < Tool Path + Alloy + Alloy File >


Build the TARGET Feature Model Alloy file:
target Set OF Features: 

TARGET Features: 

Feature: core

Feature: bank

TARGET FM Semantics: pred semanticatarget[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }

 Alloy File has been created. Check it out in < Tool Path + Alloy + Alloy File >


Build the SOURCE Configuration Knowledge Alloy file:

Class Content:
package org.bank.client;

import org.bank.account.Account;

public class Client {

	private String name;  
    private String phone;
    private Account account;
    
    public Client(String name, String phone, Account account) {
		super();
		this.name = name;
		this.phone = phone;
		this.account = account;
	}
    
    public Client(String name, Account account) {
		super();
		this.name = name;
		this.account = account;
	}

	@Override
	public String toString() {
		return "Client [name=" + name + ", conta=" + account	+ "]";
	}

	/* .......................... Getters and Setters*/
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getPhone() {
		return phone;
	}
	public void setPhone(String phone) {
		this.phone = phone;
	}
	public Account getAccount() {
		return account;
	}
	public void setAccount(Account conta) {
		this.account = conta;
	}  
    
    
}

Parametros para o SOOT -> Classe:Client path:/home/jefferson/Desktop/workspace/Bank1.0/src/org/bank/client
java.lang.RuntimeException: Error: class org.bank.client.Client read in from a classfile in which Client was expected.

Class Content:
package org.bank.account;

import org.bank.client.Client;

public class Account {
	
	private int ag;  
    private int cc;  
    private double balance;
    private static final double WITHDRAW_lIMIT = 1000.00;
   
    /* ............................................ Constructors */
    public Account() {
    	super();
	}
    public Account(int ag, int cc, Client client, double balance) {
		super();
		this.ag = ag;
		this.cc = cc;
		this.balance = balance;
	}
	public Account(int ag, int cc) {
		super();
		this.ag = ag;
		this.cc = cc;
	}
	
	/* ............................................ Methods */
	public boolean transferir(Double value, Account c){
		if(this.getBalance()>=value){
			this.debito(value);
			c.setBalance(c.getBalance()+value);
			return true;
		}
		return false;
	}
	public boolean deposito(double value){
		this.balance += value;
		return true;
	}
	
	public boolean debito(double value){
		if(this.getBalance()>=value){
			this.balance -= value;
			return true;
		}
		return false;
	}
	
	public boolean sacar(double value){
		if(value<=WITHDRAW_lIMIT){
			this.balance -= value;
			return true;
		}
		return false;
	}
	
	/* ............................................ ToString */
	@Override
	public String toString() {
		return "Conta [ag=" + ag + ", cc=" + cc + ", balance=" + balance + "]";
	}

	/* .......................... Getters and Setters*/
    public int getAg() {
		return ag;
	}
	public void setAg(int ag) {
		this.ag = ag;
	}
	public int getCc() {
		return cc;
	}
	public void setCc(int cc) {
		this.cc = cc;
	}
	public double getBalance() {
		return balance;
	}
	public void setBalance(double balance) {
		this.balance = balance;
	}  
}

Parametros para o SOOT -> Classe:Account path:/home/jefferson/Desktop/workspace/Bank1.0/src/org/bank/account
	at soot.coffi.Util.resolveFromClassFile(Util.java:90)
	at soot.CoffiClassSource.resolve(CoffiClassSource.java:39)
	at soot.SootResolver.bringToHierarchy(SootResolver.java:195)
	at soot.SootResolver.bringToSignatures(SootResolver.java:224)
	at soot.SootResolver.processResolveWorklist(SootResolver.java:139)
	at soot.SootResolver.resolveClass(SootResolver.java:124)
	at soot.Scene.loadClass(Scene.java:427)
	at soot.Scene.loadClassAndSupport(Scene.java:412)
	at soot.Scene.loadNecessaryClass(Scene.java:1012)
	at soot.Scene.getDependencies(Scene.java:1027)
	at soot.Main.getDependences(Main.java:178)
	at soot.Main.getDependences(Main.java:163)
	at br.edu.ufcg.dsc.ck.xml.XMLReader.getRequiredClasses(XMLReader.java:230)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.getProvidedRequired(HephaestusCKReader.java:58)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.readCK(HephaestusCKReader.java:116)
	at br.edu.ufcg.dsc.ProductLine.getCk(ProductLine.java:254)
	at safeEvolution.wellFormedness.WellFormedness.buildAlloyCKFile(WellFormedness.java:60)
	at safeEvolution.wellFormedness.WellFormedness.isWF(WellFormedness.java:150)
	at br.edu.ufcg.dsc.ToolCommandLine.verifyLine(ToolCommandLine.java:158)
	at br.edu.ufcg.dsc.evaluation.Analyzer.analize(Analyzer.java:44)
	at br.edu.ufcg.dsc.MainRunner$1.run(MainRunner.java:58)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3378)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3036)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at br.edu.ufcg.dsc.MainRunner.run(MainRunner.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1212)
java.lang.RuntimeException: Error: class org.bank.account.Account read in from a classfile in which Account was expected.
	at soot.coffi.Util.resolveFromClassFile(Util.java:90)
	at soot.CoffiClassSource.resolve(CoffiClassSource.java:39)
	at soot.SootResolver.bringToHierarchy(SootResolver.java:195)
	at soot.SootResolver.bringToSignatures(SootResolver.java:224)
	at soot.SootResolver.processResolveWorklist(SootResolver.java:139)
	at soot.SootResolver.resolveClass(SootResolver.java:124)
	at soot.Scene.loadClass(Scene.java:427)
	at soot.Scene.loadClassAndSupport(Scene.java:412)
	at soot.Scene.loadNecessaryClass(Scene.java:1012)
	at soot.Scene.getDependencies(Scene.java:1027)
	at soot.Main.getDependences(Main.java:178)
	at soot.Main.getDependences(Main.java:163)
	at br.edu.ufcg.dsc.ck.xml.XMLReader.getRequiredClasses(XMLReader.java:230)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.getProvidedRequired(HephaestusCKReader.java:58)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.readCK(HephaestusCKReader.java:116)
	at br.edu.ufcg.dsc.ProductLine.getCk(ProductLine.java:254)
	at safeEvolution.wellFormedness.WellFormedness.buildAlloyCKFile(WellFormedness.java:60)
	at safeEvolution.wellFormedness.WellFormedness.isWF(WellFormedness.java:150)
	at br.edu.ufcg.dsc.ToolCommandLine.verifyLine(ToolCommandLine.java:158)
	at br.edu.ufcg.dsc.evaluation.Analyzer.analize(Analyzer.java:44)
	at br.edu.ufcg.dsc.MainRunner$1.run(MainRunner.java:58)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3378)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3036)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at br.edu.ufcg.dsc.MainRunner.run(MainRunner.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1212)

Class Content:
package org.bank.facade;

import org.bank.account.Account;

public class Facade {
	
	public Facade() {
		super();
	}
	public boolean withdraw(Account c, Double v){
		return c.sacar(v);
	}
}

Parametros para o SOOT -> Classe:Facade path:/home/jefferson/Desktop/workspace/Bank1.0/src/org/bank/facade
java.lang.RuntimeException: Error: class org.bank.facade.Facade read in from a classfile in which Facade was expected.
	at soot.coffi.Util.resolveFromClassFile(Util.java:90)
	at soot.CoffiClassSource.resolve(CoffiClassSource.java:39)
	at soot.SootResolver.bringToHierarchy(SootResolver.java:195)
	at soot.SootResolver.bringToSignatures(SootResolver.java:224)
	at soot.SootResolver.processResolveWorklist(SootResolver.java:139)
	at soot.SootResolver.resolveClass(SootResolver.java:124)
	at soot.Scene.loadClass(Scene.java:427)
	at soot.Scene.loadClassAndSupport(Scene.java:412)
	at soot.Scene.loadNecessaryClass(Scene.java:1012)
	at soot.Scene.getDependencies(Scene.java:1027)
	at soot.Main.getDependences(Main.java:178)
	at soot.Main.getDependences(Main.java:163)
	at br.edu.ufcg.dsc.ck.xml.XMLReader.getRequiredClasses(XMLReader.java:230)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.getProvidedRequired(HephaestusCKReader.java:58)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.readCK(HephaestusCKReader.java:116)
	at br.edu.ufcg.dsc.ProductLine.getCk(ProductLine.java:254)
	at safeEvolution.wellFormedness.WellFormedness.buildAlloyCKFile(WellFormedness.java:60)
	at safeEvolution.wellFormedness.WellFormedness.isWF(WellFormedness.java:150)
	at br.edu.ufcg.dsc.ToolCommandLine.verifyLine(ToolCommandLine.java:158)
	at br.edu.ufcg.dsc.evaluation.Analyzer.analize(Analyzer.java:44)
	at br.edu.ufcg.dsc.MainRunner$1.run(MainRunner.java:58)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3378)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3036)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at br.edu.ufcg.dsc.MainRunner.run(MainRunner.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1212)

Class Content:
package org.bank.validation;

public class Validation {
	private static Validation instance = new Validation();
	private static final double WITHDRAW_lIMIT = 1000.00;
	private Validation() {
		super();
	}
	public static Validation getInstance(){
	      return instance;
    }
	public boolean withDrawValidation(double value){
		if(value<WITHDRAW_lIMIT){
			return true;
		}return false;
	}
}

Parametros para o SOOT -> Classe:Validation path:/home/jefferson/Desktop/workspace/Bank1.0/src/org/bank/validation
java.lang.RuntimeException: Error: class org.bank.validation.Validation read in from a classfile in which Validation was expected.
	at soot.coffi.Util.resolveFromClassFile(Util.java:90)
	at soot.CoffiClassSource.resolve(CoffiClassSource.java:39)
	at soot.SootResolver.bringToHierarchy(SootResolver.java:195)
	at soot.SootResolver.bringToSignatures(SootResolver.java:224)
	at soot.SootResolver.processResolveWorklist(SootResolver.java:139)
	at soot.SootResolver.resolveClass(SootResolver.java:124)
	at soot.Scene.loadClass(Scene.java:427)
	at soot.Scene.loadClassAndSupport(Scene.java:412)
	at soot.Scene.loadNecessaryClass(Scene.java:1012)
	at soot.Scene.getDependencies(Scene.java:1027)
	at soot.Main.getDependences(Main.java:178)
	at soot.Main.getDependences(Main.java:163)
	at br.edu.ufcg.dsc.ck.xml.XMLReader.getRequiredClasses(XMLReader.java:230)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.getProvidedRequired(HephaestusCKReader.java:58)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.readCK(HephaestusCKReader.java:116)
	at br.edu.ufcg.dsc.ProductLine.getCk(ProductLine.java:254)
	at safeEvolution.wellFormedness.WellFormedness.buildAlloyCKFile(WellFormedness.java:60)
	at safeEvolution.wellFormedness.WellFormedness.isWF(WellFormedness.java:150)
	at br.edu.ufcg.dsc.ToolCommandLine.verifyLine(ToolCommandLine.java:158)
	at br.edu.ufcg.dsc.evaluation.Analyzer.analize(Analyzer.java:44)
	at br.edu.ufcg.dsc.MainRunner$1.run(MainRunner.java:58)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3378)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3036)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at br.edu.ufcg.dsc.MainRunner.run(MainRunner.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1212)

Class Content:
package org.bank.gui;

/*import java.util.Scanner;*/
import org.bank.account.Account;
import org.bank.client.Client;
import org.bank.facade.Facade;
import org.bank.validation.Validation;


public class GUI{
	
	public GUI(){
		super();
	}

	public boolean withdrawView(Client client){
		System.out.println("Bank Withdraw View for Client: " + client);
		/*Scanner scanner = new Scanner( System.in );
		System.out.print("\nEnter Withdraw Value: " );
		String input = scanner.nextLine(); 	    */
		return withdrawValidation(client, Double.parseDouble("50"));
	}

	public boolean withdrawValidation(Client client, double value) {
		Validation validation =  Validation.getInstance();
		Facade facade = new Facade();
		if(validation.withDrawValidation(value)){
			return facade.withdraw(client.getAccount(), (value));
		}else{
			System.out.println("\nIt is not allowed to withdraw an amount greater than 1000.");
			return false;
		}
	}
	
	public static void main(String[] args) {
		Account account = new Account(1,1);
		account.setBalance(2000);
		Client client = new Client("Jefferson", account);
		new GUI().withdrawView(client);
		System.out.println("\n" + client);
		
	}

}

Parametros para o SOOT -> Classe:GUI path:/home/jefferson/Desktop/workspace/Bank1.0/src/org/bank/gui
java.lang.RuntimeException: Error: class org.bank.gui.GUI read in from a classfile in which GUI was expected.
	at soot.coffi.Util.resolveFromClassFile(Util.java:90)
	at soot.CoffiClassSource.resolve(CoffiClassSource.java:39)
	at soot.SootResolver.bringToHierarchy(SootResolver.java:195)
	at soot.SootResolver.bringToSignatures(SootResolver.java:224)
	at soot.SootResolver.processResolveWorklist(SootResolver.java:139)
	at soot.SootResolver.resolveClass(SootResolver.java:124)
	at soot.Scene.loadClass(Scene.java:427)
	at soot.Scene.loadClassAndSupport(Scene.java:412)
	at soot.Scene.loadNecessaryClass(Scene.java:1012)
	at soot.Scene.getDependencies(Scene.java:1027)
	at soot.Main.getDependences(Main.java:178)
	at soot.Main.getDependences(Main.java:163)
	at br.edu.ufcg.dsc.ck.xml.XMLReader.getRequiredClasses(XMLReader.java:230)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.getProvidedRequired(HephaestusCKReader.java:58)
	at br.edu.ufcg.dsc.ck.HephaestusCKReader.readCK(HephaestusCKReader.java:116)
	at br.edu.ufcg.dsc.ProductLine.getCk(ProductLine.java:254)
	at safeEvolution.wellFormedness.WellFormedness.buildAlloyCKFile(WellFormedness.java:60)
	at safeEvolution.wellFormedness.WellFormedness.isWF(WellFormedness.java:150)
	at br.edu.ufcg.dsc.ToolCommandLine.verifyLine(ToolCommandLine.java:158)
	at br.edu.ufcg.dsc.evaluation.Analyzer.analize(Analyzer.java:44)
	at br.edu.ufcg.dsc.MainRunner$1.run(MainRunner.java:58)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3378)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3036)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at br.edu.ufcg.dsc.MainRunner.run(MainRunner.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1212)

source Configuration Knowledge Items:

Alloy File Content: open default
 pred provided[] { 
 }

 pred required[] { 
 }

 pred semanticaCK[] { provided[] => required[] }


Correct Set of Features:

Feature: core

Feature: bank

Including CK Signatures in Correct Set

Correct Ser Filled:

Correct Item: bank

Correct Item: core

Create Alloy CK File:
File Name: /home/jefferson/workspace/ferramentaLPSSM/Alloy/sourceCKAlloy.als
Content: module sourceCKAlloy
open default
 pred provided[] { 
 }

 pred required[] { 
 }

 pred semanticaCK[] { provided[] => required[] }
one sig bank, core in Bool{}

pred semanticasource[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }
assert WT {semanticasource[] => semanticaCK[]}
check WT for 2

Build the TARGET Configuration Knowledge Alloy file:

Class Content:
package org.bank.client;

import org.bank.account.Account;

public class Client {

	private String name;  
    private String phone;
    private Account account;
    
    public Client(String name, String phone, Account account) {
		super();
		this.name = name;
		this.phone = phone;
		this.account = account;
	}
    
    public Client(String name, Account account) {
		super();
		this.name = name;
		this.account = account;
	}

	@Override
	public String toString() {
		return "Client [name=" + name + ", conta=" + account	+ "]";
	}

	/* .......................... Getters and Setters*/
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getPhone() {
		return phone;
	}
	public void setPhone(String phone) {
		this.phone = phone;
	}
	public Account getAccount() {
		return account;
	}
	public void setAccount(Account conta) {
		this.account = conta;
	}  
    
    
}

Parametros para o SOOT -> Classe:Client path:/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/client

Provided Class: Client Dependence: org.bank.account.Account

Provided Class: Client Its Dependencies: org.bank.account.Account - constant Required: Account

Provided Class: Client Dependence: Account

Provided Class: Client Its Dependencies: Account - constant Required: Account

Provided Class: Client Dependence: package org.bank.client;


Class Name: Client, src/org/bank/client/Client.java

 Provided Classes:  [ Client ] 

 Required Classes:  [ Account ] 

Class Content:
package org.bank.account;

import org.bank.client.Client;

public class Account {
	
	private int ag;  
    private int cc;  
    private double balance;
   
    /* ............................................ Constructors */
    public Account() {
    	super();
	}
    public Account(int ag, int cc, Client client, double balance) {
		super();
		this.ag = ag;
		this.cc = cc;
		this.balance = balance;
	}
	public Account(int ag, int cc) {
		super();
		this.ag = ag;
		this.cc = cc;
	}
	
	/* ............................................ Methods */
	public boolean transferir(Double value, Account c){
		if(this.getBalance()>=value){
			this.debito(value);
			c.setBalance(c.getBalance()+value);
			return true;
		}
		return false;
	}
	public boolean deposito(double value){
		this.balance += value;
		return true;
	}
	
	public boolean debito(double value){
		if(this.getBalance()>=value){
			this.balance -= value;
			return true;
		}
		return false;
	}
	
	public boolean sacar(double value){
		this.balance -= value;
		return true;
	}
	
	/* ............................................ ToString*/
	@Override
	public String toString() {
		return "Conta [ag=" + ag + ", cc=" + cc + ", balance=" + balance + "]";
	}

	/* .......................... Getters and Setters*/
    public int getAg() {
		return ag;
	}
	public void setAg(int ag) {
		this.ag = ag;
	}
	public int getCc() {
		return cc;
	}
	public void setCc(int cc) {
		this.cc = cc;
	}
	public double getBalance() {
		return balance;
	}
	public void setBalance(double balance) {
		this.balance = balance;
	}  
}

Parametros para o SOOT -> Classe:Account path:/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/account

Provided Class: Account Dependence: org.bank.client.Client

Provided Class: Account Its Dependencies: org.bank.client.Client - constant Required: Client

Provided Class: Account Dependence: Client

Provided Class: Account Its Dependencies: Client - constant Required: Client

Provided Class: Account Dependence: package org.bank.account;


Class Name: Account, src/org/bank/account/Account.java

 Provided Classes:  [ Account ] 

 Required Classes:  [ Client ] 

Class Content:
package org.bank.facade;

import org.bank.account.Account;

public class Facade {
	
	public Facade() {
		super();
	}
	public boolean withdraw(Account c, Double v){
		return c.sacar(v);
	}
}

Parametros para o SOOT -> Classe:Facade path:/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/facade

Provided Class: Facade Dependence: org.bank.account.Account

Provided Class: Facade Its Dependencies: org.bank.account.Account - constant Required: Account

Provided Class: Facade Dependence: Account

Provided Class: Facade Its Dependencies: Account - constant Required: Account

Provided Class: Facade Dependence: package org.bank.facade;


Class Name: Facade, src/org/bank/facade/Facade.java

 Provided Classes:  [ Facade ] 

 Required Classes:  [ Account ] 

Class Content:
package org.bank.validation;

public class Validation {
	private static Validation instance = new Validation();
	private static final double WITHDRAW_lIMIT = 1000.00;
	private Validation() {
		super();
	}
	public static Validation getInstance(){
	      return instance;
    }
	public boolean withDrawValidation(double value){
		if(value<WITHDRAW_lIMIT){
			return true;
		}return false;
	}
}

Parametros para o SOOT -> Classe:Validation path:/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/validation

Provided Class: Validation Dependence: package org.bank.validation;


Class Name: Validation, src/org/bank/validation/Validation.java

 Provided Classes:  [ Validation ] 

 Required Classes: 

Class Content:
package org.bank.gui;

/*import java.util.Scanner;*/
import org.bank.account.Account;
import org.bank.client.Client;
import org.bank.facade.Facade;
import org.bank.validation.Validation;


public class GUI{
	
	public GUI(){
		super();
	}

	public boolean withdrawView(Client client){
		System.out.println("Bank Withdraw View for Client: " + client);
		/*Scanner scanner = new Scanner( System.in );
		System.out.print("\nEnter Withdraw Value: " );
		String input = scanner.nextLine(); 	    */
		return withdrawValidation(client, Double.parseDouble("50"));
	}

	public boolean withdrawValidation(Client client, double value) {
		Validation validation =  Validation.getInstance();
		Facade facade = new Facade();
		if(validation.withDrawValidation(value)){
			return facade.withdraw(client.getAccount(), (value));
		}else{
			System.out.println("\nIt is not allowed to withdraw an amount greater than 1000.");
			return false;
		}
	}
	
	public static void main(String[] args) {
		Account account = new Account(1,1);
		account.setBalance(2000);
		Client client = new Client("Jefferson", account);
		new GUI().withdrawView(client);
		System.out.println("\n" + client);
		
	}

}

Parametros para o SOOT -> Classe:GUI path:/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/gui
/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/gui/GUI.java:25,28:
  Semantic Error: Validation not found
/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/gui/GUI.java:36:
  Semantic Error: can not instantiate Unknown no matching constructor found in Unknown
/home/jefferson/Desktop/workspace/Bank1.1/src/org/bank/gui/GUI.java:38:
  Semantic Error: can not instantiate Unknown no matching constructor found in Unknown

Provided Class: GUI Dependence: org.bank.account.Account

Provided Class: GUI Its Dependencies: org.bank.account.Account - constant Required: Account

Provided Class: GUI Dependence: org.bank.facade.Facade

Provided Class: GUI Its Dependencies: org.bank.facade.Facade - constant Required: Facade

Provided Class: GUI Dependence: org.bank.validation.Validation

Provided Class: GUI Its Dependencies: org.bank.validation.Validation - constant Required: Validation

Provided Class: GUI Dependence: org.bank.client.Client

Provided Class: GUI Its Dependencies: org.bank.client.Client - constant Required: Client

Provided Class: GUI Dependence: Account

Provided Class: GUI Its Dependencies: Account - constant Required: Account

Provided Class: GUI Dependence: Facade

Provided Class: GUI Its Dependencies: Facade - constant Required: Facade

Provided Class: GUI Dependence: Validation

Provided Class: GUI Its Dependencies: Validation - constant Required: Validation

Provided Class: GUI Dependence: Client

Provided Class: GUI Its Dependencies: Client - constant Required: Client

Provided Class: GUI Dependence: package org.bank.gui;


Class Name: GUI, src/org/bank/gui/GUI.java

 Provided Classes:  [ GUI ] 

 Required Classes:  [ Account ]  [ Facade ]  [ Validation ]  [ Client ] 

target Configuration Knowledge Items:
Feature Expression: core
Provided: {GUI=src/org/bank/gui/GUI.java}
Required: [Account, Facade, Validation, Client]

Feature Expression: core
Provided: {Facade=src/org/bank/facade/Facade.java}
Required: [Account]

Feature Expression: core
Provided: {Account=src/org/bank/account/Account.java}
Required: [Client]

Feature Expression: core
Provided: {Validation=src/org/bank/validation/Validation.java}
Required: []

Feature Expression: core
Provided: {Client=src/org/bank/client/Client.java}
Required: [Account]


Alloy File Content: open default
 pred provided[] { 
( isTrue[core] => (isTrue[GUI]) )
( isTrue[core] => (isTrue[Facade]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Validation]) )
( isTrue[core] => (isTrue[Client]) )
 }

 pred required[] { 
( isTrue[core] => (isTrue[Account] and isTrue[Facade] and isTrue[Validation] and isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
 }

 pred semanticaCK[] { provided[] => required[] }


Correct Set of Features:

Feature: core

Feature: bank

Including CK Signatures in Correct Set

Signature: GUI

Signature: Account

Signature: core

Signature: Facade

Signature: Validation

Signature: Client

Correct Ser Filled:

Correct Item: GUI

Correct Item: Account

Correct Item: Facade

Correct Item: bank

Correct Item: core

Correct Item: Validation

Correct Item: Client

Create Alloy CK File:
File Name: /home/jefferson/workspace/ferramentaLPSSM/Alloy/targetCKAlloy.als
Content: module targetCKAlloy
open default
 pred provided[] { 
( isTrue[core] => (isTrue[GUI]) )
( isTrue[core] => (isTrue[Facade]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Validation]) )
( isTrue[core] => (isTrue[Client]) )
 }

 pred required[] { 
( isTrue[core] => (isTrue[Account] and isTrue[Facade] and isTrue[Validation] and isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
 }

 pred semanticaCK[] { provided[] => required[] }
one sig GUI, Account, Facade, bank, core, Validation, Client in Bool{}

pred semanticatarget[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }
assert WT {semanticatarget[] => semanticaCK[]}
check WT for 2


		The beginning of the safe composition test to the source SPL


Features: < 2 >
 [ core ]  [ bank ] 

Checking CK ... 

FileContent: module sourceCKAlloy
open default
 pred provided[] { 
 }

 pred required[] { 
 }

 pred semanticaCK[] { provided[] => required[] }
one sig bank, core in Bool{}

pred semanticasource[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }
assert WT {semanticasource[] => semanticaCK[]}
check WT for 2


Content: module sourceCKAlloy
open default
 pred provided[] { 
 }

 pred required[] { 
 }

 pred semanticaCK[] { provided[] => required[] }
one sig bank, core in Bool{}

pred semanticasource[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }
assert WT {semanticasource[] => semanticaCK[]}
check WT for 2

world get All Commands SIZE: 1
Command: Check WT for 2

ans:
 ---OUTCOME---
Unsatisfiable.


		End of Safe Composition test to the + source SPL

Well Formedness to the <Source> SPL: true


		The beginning of the safe composition test to the target SPL


Features: < 2 >
 [ core ]  [ bank ] 

Checking CK ... 

FileContent: module targetCKAlloy
open default
 pred provided[] { 
( isTrue[core] => (isTrue[GUI]) )
( isTrue[core] => (isTrue[Facade]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Validation]) )
( isTrue[core] => (isTrue[Client]) )
 }

 pred required[] { 
( isTrue[core] => (isTrue[Account] and isTrue[Facade] and isTrue[Validation] and isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
 }

 pred semanticaCK[] { provided[] => required[] }
one sig GUI, Account, Facade, bank, core, Validation, Client in Bool{}

pred semanticatarget[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }
assert WT {semanticatarget[] => semanticaCK[]}
check WT for 2


Content: module targetCKAlloy
open default
 pred provided[] { 
( isTrue[core] => (isTrue[GUI]) )
( isTrue[core] => (isTrue[Facade]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Validation]) )
( isTrue[core] => (isTrue[Client]) )
 }

 pred required[] { 
( isTrue[core] => (isTrue[Account] and isTrue[Facade] and isTrue[Validation] and isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
( isTrue[core] => (isTrue[Client]) )
( isTrue[core] => (isTrue[Account]) )
 }

 pred semanticaCK[] { provided[] => required[] }
one sig GUI, Account, Facade, bank, core, Validation, Client in Bool{}

pred semanticatarget[] { 
isTrue[bank] and ( isTrue[core] <=> isTrue[bank] )
 }
assert WT {semanticatarget[] => semanticaCK[]}
check WT for 2

world get All Commands SIZE: 1
Command: Check WT for 2

ans:
 ---OUTCOME---
Unsatisfiable.


		End of Safe Composition test to the + target SPL

Well Formedness to the <Target> SPL.: true

# SOURCE Products List<1> #

1 -> [ bank ] [ core ] 

# TARGET Products List<1> #

1 -> [ bank ] [ core ] 

Product 0 ::  [ bank ] [ core ]
constante destino esta vazio: true


	Correspondent Product

Product 1 ::  [ bank ] [ core ]

 [ GUI ] - src/org/bank/gui/GUI.java

 [ Facade ] - src/org/bank/facade/Facade.java

 [ Account ] - src/org/bank/account/Account.java

 [ Validation ] - src/org/bank/validation/Validation.java

 [ Client ] - src/org/bank/client/Client.java
constante destino esta vazio: false


	SOURCE Mapping Asset DESTINY:


	TARGET Mapping Asset DESTINY:

 key 0: GUI content: src/org/bank/gui/GUI.java
 key 1: Account content: src/org/bank/account/Account.java
 key 2: Facade content: src/org/bank/facade/Facade.java
 key 3: Validation content: src/org/bank/validation/Validation.java
 key 4: Client content: src/org/bank/client/Client.java


	SOURCE Mapping Asset ORGIGEM:



	TARGET Mapping Asset ORGIGEM:

 key 0: GUI content: /src/org/bank/gui/GUI.java
 key 1: Account content: /src/org/bank/account/Account.java
 key 2: Facade content: /src/org/bank/facade/Facade.java
 key 3: Validation content: /src/org/bank/validation/Validation.java
 key 4: Client content: /src/org/bank/client/Client.java


	SOURCE PREPROCESS TAGS:



	 TARGET PREPROCESS TAGS:




mappingAssetDestiny: false mappingAssetOrigin: false preProcess: true

The two products below do not have the same set of assets:

Product2 ::  [ bank ] [ core ]

Product1 ::  [ bank ] [ core ]


 ... Attempting to marry products that did not have a par.

This product did not have a really correspondent target product:

Product  ::  [ bank ] [ core ]


	SOURCE Mapping Asset DESTINY:


	TARGET Mapping Asset DESTINY:

 key 0: GUI content: src/org/bank/gui/GUI.java
 key 1: Account content: src/org/bank/account/Account.java
 key 2: Facade content: src/org/bank/facade/Facade.java
 key 3: Validation content: src/org/bank/validation/Validation.java
 key 4: Client content: src/org/bank/client/Client.java


	SOURCE Mapping Asset ORGIGEM:



	TARGET Mapping Asset ORGIGEM:

 key 0: GUI content: /src/org/bank/gui/GUI.java
 key 1: Account content: /src/org/bank/account/Account.java
 key 2: Facade content: /src/org/bank/facade/Facade.java
 key 3: Validation content: /src/org/bank/validation/Validation.java
 key 4: Client content: /src/org/bank/client/Client.java


	SOURCE PREPROCESS TAGS:



	 TARGET PREPROCESS TAGS:




mappingAssetDestiny: false mappingAssetOrigin: false preProcess: true


All products in the source have a really correspondent target product ?: false
areAllProductsMatched: true

Have Source and Target the same assets ?:false 


 AM Equal: false

IMPACTED ClASSES


List of Modified Classes: 1
org.bank.account.Account.java

--------------------------
Exception in thread "WorkbenchTestable" org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.RuntimeException: Error: class org.bank.client.Client read in from a classfile in which Client was expected.)
	at org.eclipse.swt.SWT.error(SWT.java:3777)
	at org.eclipse.swt.SWT.error(SWT.java:3695)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:194)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4021)
	at org.eclipse.ui.internal.testing.WorkbenchTestable.runTest(WorkbenchTestable.java:109)
	at br.edu.ufcg.dsc.MainRunner.runTests(MainRunner.java:52)
	at org.eclipse.ui.internal.testing.WorkbenchTestable$1.run(WorkbenchTestable.java:68)
	at java.lang.Thread.run(Thread.java:679)
Caused by: java.lang.RuntimeException: Error: class org.bank.client.Client read in from a classfile in which Client was expected.
	at soot.coffi.Util.resolveFromClassFile(Util.java:90)
	at soot.CoffiClassSource.resolve(CoffiClassSource.java:39)
	at soot.SootResolver.bringToHierarchy(SootResolver.java:195)
	at soot.SootResolver.bringToSignatures(SootResolver.java:224)
	at soot.SootResolver.processResolveWorklist(SootResolver.java:139)
	at soot.SootResolver.resolveClass(SootResolver.java:124)
	at soot.Scene.loadClass(Scene.java:427)
	at soot.Scene.loadClassAndSupport(Scene.java:412)
	at soot.Scene.loadNecessaryClass(Scene.java:1012)
	at soot.Scene.getDependencies(Scene.java:1027)
	at soot.Main.getDependences(Main.java:178)
	at soot.Main.getDependences(Main.java:163)
	at safeEvolution.approaches.optimizations.ImpactedClasses.copyDependencies(ImpactedClasses.java:339)
	at safeEvolution.approaches.optimizations.ImpactedClasses.copyDependencies(ImpactedClasses.java:377)
	at safeEvolution.approaches.optimizations.ImpactedClasses.processModifiedClass(ImpactedClasses.java:204)
	at safeEvolution.approaches.optimizations.ImpactedClasses.copyModifiedClassAndDependencies(ImpactedClasses.java:262)
	at safeEvolution.approaches.optimizations.ImpactedClasses.checkAssetMappingBehavior(ImpactedClasses.java:105)
	at safeEvolution.approaches.ForwardImpactedClasses.evaluate(ForwardImpactedClasses.java:22)
	at br.edu.ufcg.dsc.ToolCommandLine.verifyLine(ToolCommandLine.java:185)
	at br.edu.ufcg.dsc.evaluation.Analyzer.analize(Analyzer.java:44)
	at br.edu.ufcg.dsc.MainRunner$1.run(MainRunner.java:58)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3378)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3036)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at br.edu.ufcg.dsc.MainRunner.run(MainRunner.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1212)
